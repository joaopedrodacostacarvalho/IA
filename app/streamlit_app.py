import streamlit as st
from pathlib import Path
from utils.render_nb import render_notebook

st.set_page_config(page_title="Melhoria de M√©todos IA ‚Äî OULAD", layout="wide")

# ========================
# üéõÔ∏è MENU LATERAL
# ========================
with st.sidebar:
    st.markdown("### üìö Menu")
    page = st.radio("", ["üè† Home", "üìò Artigo 1", "üìó Artigo 2"], label_visibility="collapsed")

def find_nb(which: int):
    nb_dir = Path(__file__).resolve().parent / "notebooks"
    cands = sorted([p for p in nb_dir.glob("*.ipynb")
                    if ("artigo" in p.name.lower() and str(which) in p.name.lower())])
    return nb_dir, (cands[0] if cands else None)

# ========================
# üè† HOME
# ========================
if page == "üè† Home":
    st.title("Melhoria de M√©todos IA ‚Äî OULAD")
    st.markdown("""
    Este aplicativo foi desenvolvido como parte das atividades da disciplina **Intelig√™ncia Artificial (IA)** do curso de **An√°lise e Desenvolvimento de Sistemas ‚Äì 3¬∫ Per√≠odo**, no **Instituto Federal de Educa√ß√£o, Ci√™ncia e Tecnologia de Pernambuco (IFPE) ‚Äì Campus Jaboat√£o dos Guararapes**.
    A pesquisa e implementa√ß√£o foram conduzidas pelos estudantes **Jo√£o Pedro Carvalho da Costa** e **Marciojunior Almeida da Silva Filho**, com o objetivo de **replicar e aprimorar experimentos cient√≠ficos em ambientes virtuais de aprendizagem (VLEs)** utilizando o conjunto de dados **OULAD (Open University Learning Analytics Dataset)**.
    O aplicativo, desenvolvido em **Streamlit**, tem como prop√≥sito **facilitar a visualiza√ß√£o e execu√ß√£o dos experimentos** realizados a partir de dois artigos cient√≠ficos que exploram a predi√ß√£o de desempenho e engajamento estudantil por meio de algoritmos de aprendizado de m√°quina:
    - **Artigo 1:** *Predicting At-Risk Students Using Clickstream Data in the Virtual Learning Environment* ‚Äî **R√©plica e Melhorias**
    - **Artigo 2:** *Students‚Äô Academic Performance and Engagement Prediction in a Virtual Learning Environment Using Random Forest with Data Balancing* ‚Äî **R√©plica e Melhorias**
    > O uso do Streamlit possibilita integrar, em uma √∫nica interface, os notebooks de replica√ß√£o e de aprimoramento dos modelos, permitindo comparar os resultados de forma interativa e acess√≠vel.
    **Dica:** Acesse o menu lateral para navegar entre as se√ß√µes e clique em **‚ÄúExecutar notebook agora‚Äù** para reproduzir os experimentos diretamente no ambiente do app.
    """)

# ========================
# üìò ARTIGO 1
# ========================
elif page == "üìò Artigo 1":
    st.title("Artigo 1 ‚Äî R√©plica & Melhorias")
    nb_dir, nb_path = find_nb(1)
    if nb_path is None:
        st.error("N√£o encontrei notebook do Artigo 1 em: " + str(nb_dir))
        st.code("\\n".join(sorted([p.name for p in nb_dir.glob('*.ipynb')])))
    else:
        st.caption(f"Notebook alvo: **{nb_path.name}**")
        mode = st.radio("Modo de exibi√ß√£o", ["Usar outputs salvos (r√°pido)", "Executar agora (lento)"], horizontal=True)
        if st.button("Mostrar", type="primary"):
            render_notebook(str(nb_path), execute=(mode == "Executar agora (lento)"))
        else:
            st.info("Escolha o modo e clique em **Mostrar**.")

# ========================
# üìó ARTIGO 2
# ========================
elif page == "üìó Artigo 2":
    st.title("Artigo 2 ‚Äî Continua√ß√£o")
    nb_dir, nb_path = find_nb(2)
    if nb_path is None:
        st.error("N√£o encontrei notebook do Artigo 2 em: " + str(nb_dir))
        st.code("\\n".join(sorted([p.name for p in nb_dir.glob('*.ipynb')])))
    else:
        st.caption(f"Notebook alvo: **{nb_path.name}**")
        mode = st.radio("Modo de exibi√ß√£o", ["Usar outputs salvos (r√°pido)", "Executar agora (lento)"], horizontal=True)
        if st.button("Mostrar", type="primary"):
            render_notebook(str(nb_path), execute=(mode == "Executar agora (lento)"))
        else:
            st.info("Escolha o modo e clique em **Mostrar**.")
